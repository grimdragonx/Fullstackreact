[{"E:\\Coding Space\\reactFullstack\\frontend\\src\\index.js":"1","E:\\Coding Space\\reactFullstack\\frontend\\src\\App.js":"2","E:\\Coding Space\\reactFullstack\\frontend\\src\\reportWebVitals.js":"3","E:\\Coding Space\\reactFullstack\\frontend\\src\\Home.js":"4","E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\store.js":"5","E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\rootReducer.js":"6","E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\reducer.js":"7","E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\actionTypes.js":"8","E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\actions.js":"9"},{"size":823,"mtime":1672178843951,"results":"10","hashOfConfig":"11"},{"size":321,"mtime":1672178674033,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1672142471375,"results":"13","hashOfConfig":"11"},{"size":4751,"mtime":1672150447699,"results":"14","hashOfConfig":"11"},{"size":486,"mtime":1672170025428,"results":"15","hashOfConfig":"11"},{"size":181,"mtime":1672178812614,"results":"16","hashOfConfig":"11"},{"size":764,"mtime":1672170196390,"results":"17","hashOfConfig":"11"},{"size":211,"mtime":1672178712059,"results":"18","hashOfConfig":"11"},{"size":2077,"mtime":1672178737228,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19vi6sv",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Coding Space\\reactFullstack\\frontend\\src\\index.js",["49","50"],[],"E:\\Coding Space\\reactFullstack\\frontend\\src\\App.js",["51"],[],"E:\\Coding Space\\reactFullstack\\frontend\\src\\reportWebVitals.js",[],[],[],"E:\\Coding Space\\reactFullstack\\frontend\\src\\Home.js",["52"],[],"import React, {useEffect, useState} from 'react'\r\nimport {Navbar, Table, Container, Row, Col, Button, ButtonGroup, Form} from \"react-bootstrap\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { loadUsers, addUser, deleteUser, loadSingleUser, updateUser } from \"./redux/actions\";\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    email: \"\",\r\n    gender: \"\"\r\n}\r\n\r\nconst Home = () => {\r\n  const [state, setState] = useState(initialState);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const {users, msg, user} = useSelector(state => state.data);\r\n\r\n  const {name, email, gender} = state;\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUsers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (msg) {\r\n      toast.success(msg);\r\n    }\r\n  }, [msg]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setState({...user });\r\n    }\r\n  }, [user]);\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    setState({...state, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name || !email || !gender) {\r\n      toast.error(\"Please Fill all input field\");\r\n    } else {\r\n      if(!editMode) {\r\n        dispatch(addUser(state));\r\n        setState({name: \"\", email: \"\", gender: \"\"});\r\n      } else {\r\n        dispatch(updateUser(state, userId));\r\n        setState({name: \"\", email: \"\", gender: \"\"});\r\n        setEditMode(false);\r\n        setUserId(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if(window.confirm(\"Are you sure you want to delete that user?\")){\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    dispatch(loadSingleUser(id));\r\n    setUserId(id);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Navbar bg=\"primary\" variant=\"dark\" className=\"justify-content-center\">\r\n      <Navbar.Brand>Python Flask MongoDB React Redux CRUD Application</Navbar.Brand>\r\n    </Navbar>\r\n    <Container style={{ marginTop: \"70px\" }}>\r\n      <Row>\r\n        <Col md={4}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                value={name || \"\"}\r\n                onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={email || \"\"}\r\n                onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Gender</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Gender\"\r\n                name=\"gender\"\r\n                value={gender || \"\"}\r\n                onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <div className=\"d-grid gap-2 mt-2\">\r\n              <Button type=\"submit\" variant=\"primary\" size=\"lg\">\r\n                {editMode ? \"Update\" : \"Submit\"}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n        <Col md={8}>\r\n          <Table bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>No.</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Gender</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            {users && users.map((item, index) => (\r\n              <tbody key={index}>\r\n                <tr>\r\n                  <td>{index+1}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.email}</td>\r\n                  <td>{item.gender}</td>\r\n                  <td>\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        style={{ marginRight: \"5px\" }}\r\n                        variant=\"danger\"\r\n                        onClick={() => handleDelete(item._id)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                      <Button \r\n                        variant=\"secondary\"\r\n                        onClick={() => handleUpdate(item._id)}\r\n                      >\r\n                      Update\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            ))}\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\store.js",[],[],"E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\rootReducer.js",[],[],"E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\reducer.js",[],[],"E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\actionTypes.js",[],[],"E:\\Coding Space\\reactFullstack\\frontend\\src\\redux\\actions.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":9,"column":10,"nodeType":"55","messageId":"56","endLine":9,"endColumn":21},{"ruleId":"53","severity":1,"message":"57","line":15,"column":17,"nodeType":"55","messageId":"56","endLine":15,"endColumn":26},{"ruleId":"53","severity":1,"message":"58","line":4,"column":17,"nodeType":"55","messageId":"56","endLine":4,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":27,"column":6,"nodeType":"61","endLine":27,"endColumn":8,"suggestions":"62"},"no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'persistor' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["63"],{"desc":"64","fix":"65"},"Update the dependencies array to be: [dispatch]",{"range":"66","text":"67"},[792,794],"[dispatch]"]